{"version":3,"sources":["TodoList.jsx","App.js","store.js","index.js"],"names":["TodoList","useState","newTodo","setNewTodo","editing","setEditing","updateTodo","setUpdateTodo","todoItems","useSelector","state","completedItems","dispatch","useDispatch","className","onSubmit","e","preventDefault","type","payload","placeholder","value","onChange","target","icon","faPlus","map","todo","index","onClick","completeTodo","faCheck","deleteTodo","faTrash","faEdit","event","newValue","editTodo","faSave","item","App","initialState","store","createStore","action","completedTodo","filter","_","i","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.30768372.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEdit,\n  faPlus,\n  faTrash,\n  faCheck,\n  faSave\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./TodoList.css\";\nconst TodoList = () => {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [editing, setEditing] = useState(-1);\n  const [updateTodo, setUpdateTodo] = useState(\"\");\n  const todoItems = useSelector((state) => state.todoItems);\n  const completedItems = useSelector((state) => state.completedItems);\n\n  const dispatch = useDispatch();\n  const addTodo = (todo) => dispatch({ type: \"ADD_TODO\", payload: todo });\n  const completeTodo = (index) =>\n    dispatch({ type: \"COMPLETE_TODO\", payload: index });\n  const deleteTodo = (index) =>\n    dispatch({ type: \"DELETE_TODO\", payload: index });\n  const editTodo = (index, newValue) => {\n    dispatch({ type: \"EDIT_TODO\", payload: { index, newValue } });\n    setUpdateTodo(\"\");\n    setEditing(-1);\n  };\n\n  return (\n    <div className=\"todo-list\">\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          addTodo(newTodo);\n          setNewTodo(\"\");\n        }}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Add a todo\"\n          value={newTodo}\n          onChange={(e) => setNewTodo(e.target.value)}\n        />\n        <button type=\"submit\">\n          {\" \"}\n          <FontAwesomeIcon icon={faPlus} />{\" \"}\n        </button>\n      </form>\n      <ul>\n        {todoItems.map((todo, index) => (\n          <li key={index} className=\"todo-item\">\n            {todo}{\" \"}\n            <button onClick={() => completeTodo(index)}>\n              <FontAwesomeIcon icon={faCheck} />\n            </button>\n            <button onClick={() => deleteTodo(index)}>\n              <FontAwesomeIcon icon={faTrash} />\n            </button>\n            <button onClick={() => setEditing(index)}>\n              <FontAwesomeIcon icon={faEdit} />\n            </button>\n            {editing === index && (\n              <>\n                <input\n                  value={updateTodo}\n                  onChange={(event) => setUpdateTodo(event.target.value)}\n                />\n                <button onClick={() => editTodo(index, updateTodo)}>\n                  <FontAwesomeIcon icon={faSave} />\n                </button>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n      <ul>\n        <h3>Completed Todos</h3>\n\n        {completedItems.map((item, index) => (\n          <li className=\"todo-item\" key={index}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default TodoList;\n","import \"./styles.css\";\nimport TodoList from \"./TodoList\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n","import { createStore } from \"redux\";\n\n// The initial state of the store\nconst initialState = {\n  todoItems: [],\n  completedItems: []\n};\n\n// The root reducer function\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return { ...state, todoItems: [...state.todoItems, action.payload] };\n    case \"COMPLETE_TODO\":\n      const completedTodo = state.todoItems[action.payload];\n      return {\n        ...state,\n        completedItems: [...state.completedItems, completedTodo],\n        todoItems: state.todoItems.filter((_, i) => i !== action.payload)\n      };\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        todoItems: state.todoItems.filter((_, i) => i !== action.payload)\n      };\n\n    case \"EDIT_TODO\":\n      return {\n        ...state,\n        todoItems: state.todoItems.map((item, i) => {\n          if (i === action.payload.index) {\n            return action.payload.newValue;\n          }\n          return item;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Create the store\nexport const store = createStore(rootReducer);\n","import { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { store } from \"./store\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}